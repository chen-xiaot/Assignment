// 1.longest palindrome

public class longestPalindrome {
	
	public int longestPalindrome(String s) {
		
		int countOddTime=0;
		int [] letter = new int [57];
	
		if(s.length()==0 ||s.length()==1){
			return 0;
		}
		
		for(int i=0; i<s.length(); i++){
			letter[s.charAt(i)-'A']++;	// here will have OutOfBounds error:
		}					// if s.charAt(i) is 'z'  =>   'z' - 'A' = 122 - 65 = 57;
							// but the largest index of you array letter is 56;
							// -2;
		
		for(int j=0;j<57;j++){

			if(letter[j]%2!=0){
				countOddTime++;
			}
		}
		
		if(countOddTime==0){
			return s.length();
		}
		
		return s.length()-countOddTime+1;

	}
	
	public static void main(String[] args) {
		
		System.out.println('z'-'A');

		longestPalindrome lp=new longestPalindrome();
		System.out.println(lp.longestPalindrome("aabbccc"));
		System.out.println(lp.longestPalindrome("Aabbccc"));
	}

}





// 2.max profit


public class maxProfit {

	public int maxProfit(int[] prices) {
		
		int maxprofit = 0;
		
		if(prices.length <= 1){ 
			return 0;
		}
		
	    for(int i=0; i<prices.length-1; i++){
	    	if(prices[i] < prices[i+1]){
	            maxprofit += prices[i+1]-prices[i];
	    	}    
	     }
	    
	     return maxprofit;
}
	
	public static void main(String[] args) {
		
		maxProfit mp = new maxProfit();
		int[] prices1={1,3,5,3};
		int[] prices2={1,3,5,3,8};
		int[] prices3={1,3,5,3,8,6,10};
		int[] prices4={3,1};
		int[] prices5={3,1,5};
		System.out.println(mp.maxProfit(prices1));
		System.out.println(mp.maxProfit(prices2));
		System.out.println(mp.maxProfit(prices3));
		System.out.println(mp.maxProfit(prices4));
		System.out.println(mp.maxProfit(prices5));
		
	}

}




// 3.1 title to number


public class titleToNumber {
	
		int start=(int)'A';
		int sum=0;
		int firstLetter=0;
		int secondLetter=0;
	
	public int titleToNumber(String s) {
		
		if(s.length()>1){
			firstLetter = s.charAt(0)-start;
			secondLetter =s.charAt(1)-start;
			sum= 26 + 26*firstLetter + secondLetter + 1;
			return sum;
		}
		
			sum= s.charAt(0)-start+1;
			return sum;
}
	
	public static void main(String[] args) {
		
		titleToNumber ttn= new titleToNumber();
		System.out.println(ttn.titleToNumber("AB"));
		System.out.println(ttn.titleToNumber("AA"));
		System.out.println(ttn.titleToNumber("Z"));
		System.out.println(ttn.titleToNumber("A"));
	}
	
}




// 3.2 title to number


public class titleToNumber2 {

	public int titleToNumber(String s) {
		
		int a=0,b=1;
		
		for(int i = s.length() - 1; i >= 0 ; i--){
			int c = s.charAt(i) - 'A' + 1;
			a = a + c * b;
			b = b * 26;
		}
		return a;
}
	
	public static void main(String[] args) {
		
		titleToNumber2 ttn=new titleToNumber2();
		System.out.println(ttn.titleToNumber("AB"));
		System.out.println(ttn.titleToNumber("AA"));
		System.out.println(ttn.titleToNumber("Z"));
		System.out.println(ttn.titleToNumber("A"));
		
	}

}




// 4.bonus


public class bonus {

	public int twoSum(int[] nums, int target) {

		int count=0;
		
		if(nums.length<2){
			return 0;
		}
		
		for(int i = 0; i<nums.length; i++){
			
			for(int j=i+1; j<nums.length; j++){
				
				int sum=nums[i]+nums[j];
					if(sum == target)
						count++;
			}	
		}
		
		return count;
	}
	
	public static void main(String[] args) {
		
		int[] nums1={2,7,11,15};
		int[] nums2={1,5,2,4,3,6};
		bonus b = new bonus();
		System.out.println(b.twoSum(nums1, 9));
		System.out.println(b.twoSum(nums1, 10));
		System.out.println(b.twoSum(nums2, 7));
		System.out.println(b.twoSum(nums2, 10));
	}

}




// 4.1 more bonus


import java.util.HashMap;

public class moreBonus {

	public int twoSum(int[] nums, int target) {
		
		int count=0;
		HashMap<Integer, Integer> map = new HashMap<>();
		
		if(nums.length<2){
			return 0;
		}
		
		for(int i = 0; i<nums.length; i++){
			
			if(nums[i]<=target && (target-nums[i])<=target){
				
				map.put(nums[i], target-nums[i]);
			}
		}
		
		for(int i = 0; i<nums.length; i++){
			if(map.containsValue(nums[i])){
				count++;
			}
		}
		
		return count/2;
	}
	
	public static void main(String[] args) {
		
		int[] nums1={2,7,11,15};
		int[] nums2={1,5,2,4,3,6};
		moreBonus b = new moreBonus();
		System.out.println(b.twoSum(nums1, 9));
		System.out.println(b.twoSum(nums1, 10));
		System.out.println(b.twoSum(nums2, 7));
		System.out.println(b.twoSum(nums2, 10));
	}

}
