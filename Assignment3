import java.util.Scanner;

public class Assignment3 {
	
	// assignments
		/**
		 * Write a method to find N numbers which are power of three. e.g. n=4,
		 * return {1,3,9,27}
		 */
		public int[] findPowerOfThree(int n) {
		    
			int[] store= new int[n];
			int a;
			System.out.print("{ ");
			for(int i=0; i<n; i++){
				
			  a =(int) Math.pow(3, i);
			  store[i]=a;
			  System.out.print(" "+store[i]);
			}
			
			System.out.print(" }");
			System.out.println();
			return null;
	}
		
		
		/**
		 * Given a integer 'n', return n%count, count is the number of digits of n
		 * For example, n = 100, return 1
		 */
		public int countDigits(int n) {
			
			int count,result;
			if(n<0){
				n=-1*n;
			}
			String str = String.valueOf(n);
	        count=str.length();
	        result = n%count;
	        System.out.println(result);
			return -1;
	}
	
	
		/**
		 * Given a integer 'n', if n is odd, print n odd numbers, if n is even,
		 * print n even numbers. For example, n = 3, print 1 3 5 n = 4, print 0 2 4
		 * 6
		 */
		public void printNumbers(int n) {

			if (n%2==0){
				for(int i=0;i<2*n;i+=2){
					System.out.print(" "+i);
				}
				System.out.println();
			}
		
			
			if(n%2!=0){
				for(int i=1;i<2*n;i+=2){
					System.out.print(" "+i);
				}
				System.out.println();
			}
			
			
			return;
			
		}
		
		/**
		 * Given numRows, generate the first numRows of Pascal's triangle. For
		 * example, given numRows = 5, return: [1] [1,1] [1,2,1] [1,3,3,1]
		 * [1,4,6,4,1]
		 */
		public int[][] generatePascalsTriangle(int n) {
			
			
			int a[][]= new int [n][n];
			
			for (int i=0; i<n;i++){
			   
				   a[i][i]=1;
			       a[i][0]=1;
			}
			 
			for (int i=2; i<n;i++){
			for(int j=1; j<i;j++){
			    
				a[i][j]=a[i-1][j-1] + a[i-1][j];
			   }
			}
			
			for (int i=0; i<n;i++){
				
			for(int k=0; k<2*(n-i)-1;k++){
			     
				System.out.print(" ");
			}
			
			for(int j=0;j<=i;j++){
			  
				System.out.print(a[i][j]+"   ");
			}
			
			    System.out.println(" ");
			}

			
			return null;
		}

		
		/**
		 * Write a function that takes a string as input and reverse only the vowels
		 * of a string. For example: Given s = "hello", return "holle".
		 */
		public String reverseVowels(String s) {
			
			char temp; int left=0, right=s.length()-1;String sNew;
			char[] ch = s.toCharArray();
			while(left<right){
				
				if((ch[left]=='a' ||ch[left]=='e' ||ch[left]=='i' ||ch[left]=='o' ||ch[left]=='u')&&
						(ch[right]=='a' ||ch[right]=='e' ||ch[right]=='i' ||ch[right]=='o' ||ch[right]=='u')){
					temp=ch[right];
					ch[right]=ch[left];
					ch[left]=temp;
					left ++;
					right --;
					
				}
				
				else if ((ch[left]=='a' ||ch[left]=='e' ||ch[left]=='i' ||ch[left]=='o' ||ch[left]=='u')&&
						(ch[right]!='a' &&ch[right]!='e' &&ch[right]!='i' &&ch[right]!='o' &&ch[right]!='u')){
					right--;
				}
				
				else if ((ch[left]!='a' &&ch[left]!='e' &&ch[left]!='i' &&ch[left]!='o' &&ch[left]!='u')&&
						(ch[right]=='a' ||ch[right]=='e' ||ch[right]=='i' ||ch[right]=='o' ||ch[right]=='u')){
					left++;
				}	
				else
					break;
			
			}
			
			sNew = String.valueOf(ch);
			System.out.println("Reversed Given String :" + sNew);
			
			return null;
	}


		
		/**
		 * Given a string s consists of upper/lower-case alphabets and empty space
		 * characters ' ', return the length of last word in the string. If the last
		 * word does not exist, return 0. Note: A word is defined as a character
		 * sequence consists of non-space characters only.
		 */
		public int lengthOfLastWord(String str) {
			
			char[] ch = str.toCharArray();
			int right=str.length()-1;
			int count=0;
			for(int i=str.length()-1; i>=-1;i--){
			if(i<0||ch[right]==' '){
				System.out.println("the length of last word is "+count);
				break;
			}
			if(ch[right]!=' '){
				right --;	
				count++;
			}
			}
			return -1;
		}

		
		/**
		 * Reverse a string by words. Do not use 'split' function. e.g. "I like
		 * soccer" --> "soccer like I"
		 */
		public String reverseString2(String str) {
			
			int count=0;
			char[] ch = str.toCharArray();
			int right=str.length()-1;
			StringBuilder newstr= new StringBuilder(str.length());
			
			
			while(right>=-1){
				
			if(right==-1||ch[right]==' '){
				int j=right+1;
				for(int i=j; i<j+count;i++){
					newstr.append(ch[i]);
				}
				count=0;
				right--;
				newstr.append(" ");		
				
			}
			
			else if(ch[right]!=' '){
				right --;	
				count++;
			}
			}
			
			System.out.println(newstr);
				
			return null;
	}
		
		
		// Bonus
		/**
		 * A robot from Mars send a long message to Earth which only contains many
		 * "SOS", like "SOSSOS", "SOSSOSSOSSOSSOS" But the radiation from universe
		 * changed some characters of the massage. Write a method to count how many
		 * characters were changed. For example, "SOSSOSSOS" might be changed to
		 * "SOSSUSSOP", then your method should return 2. The message was consisted
		 * by "SOS" so its length will be multiple of 3. You could assume the
		 * message only contains upper letter.
		 */
		public int checkMessage(String message) {
			int count=0;
			
			char[] ch = message.toCharArray();
			for(int i=0; i<message.length();i+=3){
				if(ch[i]!='S'){
					count++;
				}
			}
			for(int j=1; j<message.length();j+=3){
				if(ch[j]!='O'){
					count++;
				}
			}
			
			for(int k=2; k<message.length();k+=3){
				if(ch[k]!='S'){
					count++;
				}
			} 
			System.out.println("how many characters were changed: "+ count);
			
			return -1;
			
		}
	

	  

		
		
	public static void main(String[] args) {
	          
		Assignment3 assignment3= new Assignment3();
		Scanner scanner = new Scanner(System.in);
		System.out.println("_____findPowerOfThree_____");
		System.out.println("Enter N>=0");
		int n1 = scanner.nextInt();
		assignment3.findPowerOfThree(n1);
		System.out.println("----------------------");
		System.out.println("                      ");
		
		System.out.println("_____countDigits_____");
		System.out.println("Enter N");
		
		int n2 = scanner.nextInt();
		assignment3.countDigits(n2);
		System.out.println("----------------------");
		System.out.println("                      ");
		
		System.out.println("_____printNumbers_____");
		System.out.println("Enter N");
		int n3 = scanner.nextInt();
		assignment3.printNumbers(n3);
		System.out.println("----------------------");
		System.out.println("                      ");
		
		System.out.println("_____generatePascalsTriangle_____");
		System.out.println("Enter N");
		int n4 = scanner.nextInt();
		assignment3.generatePascalsTriangle(n4);
		System.out.println("----------------------");
		System.out.println("                      ");
		
		System.out.println("_____reverseVowels_____");
		System.out.println("Enter String");
		String n5 = scanner.next();
		assignment3.reverseVowels(n5);
		System.out.println("----------------------");
		System.out.println("                      ");
		
		System.out.println("_____lengthOfLastWord_____");
		System.out.println("Enter String");
		String n6 = scanner.nextLine();
		n6 = scanner.nextLine();
		assignment3.lengthOfLastWord(n6);
		System.out.println("----------------------");
		System.out.println("                      ");
		
		
		System.out.println("_____reverseString2_____");
		System.out.println("Enter String");
		String n7 = scanner.nextLine();
		assignment3.reverseString2(n7);
		System.out.println("----------------------");
		System.out.println("                      ");
		
		
		System.out.println("_____checkMessage_____");
		System.out.println("Enter Message");
		String n8 = scanner.next();
		assignment3.checkMessage(n8);
		System.out.println("----------------------");
		System.out.println("                      ");
	}

}
