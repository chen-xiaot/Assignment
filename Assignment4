/* 1
 * Assignment3Test
 */

import static org.junit.Assert.*;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import org.junit.Test;

public class Assignment3Test {
	Assignment3 test= new Assignment3();
	ByteArrayOutputStream out=new ByteArrayOutputStream();
	
	
	@Test
	public void test1() {
		
		int[] output = test.findPowerOfThree(3);
		int[] expected = new int[]{1,3,9};
		assertArrayEquals(expected,output);
	} 
	@Test
	public void test2(){
		
		int output = test.countDigits(20);
		int expected = 0;
		assertEquals(expected,output);
	}
	
	@Test
	public void test3(){
		System.setOut(new PrintStream(out));
		test.printNumbers(5);
		assertEquals(" 1 3 5 7 9\n",out.toString());
		System.setOut(null);
	}
	
	@Test
	public void test4(){
		int[][] output = test.generatePascalsTriangle(5);
		int[][] expected = new int[][]{{1,0,0,0,0},{1,1,0,0,0},{1,2,1,0,0},{1,3,3,1,0},{1,4,6,4,1}};
		assertArrayEquals(expected,output);
		
	}
	
	@Test
	public void test5(){
		String output = test.reverseVowels("leecode");
		String expected = "leocede";
		assertEquals(expected,output);
	}
	
	@Test
	public void test6(){
		int output = test.lengthOfLastWord("hello ");
		int expected = 0;
		assertEquals(expected,output);
	}

	@Test
	public void test7(){
		String output = test.reverseString2("i love java");
		String expected = "java love i";
		assertEquals(expected,output);
	}
	
	@Test
	public void test8(){
		int output = test.checkMessage("SUSSPS");
		int expected = 2;
		assertEquals(expected,output);
	}
}






/* 2
 * MusicAlbum
 */
 
public class MusicAlbum {
	
	private String albumTitle;
	private String singer;
	private double price;

	public MusicAlbum(String albumTitle, String singer, double price){
		this.albumTitle = albumTitle;
		this.singer = singer;
		this.price = price;
	}


	public String getAlbumTitle() {
		return albumTitle;
	}


	public String getSinger() {
		return singer;
	}


	public double getPrice() {
		return price;
	}

	public void setPrice(double price) {
		this.price = price;
	}
	

}






/* 3
 * GasTank
 */
 
public class GasTank {
	
	double amount = 0;
	

void addGas(double plus){
	amount+=plus;
}

boolean useGas(double minus){
	if(amount<=minus){
		return false;
	}
	else {
		amount-=minus;
		return true;
	}
	
}

double getGasLevel(){
	return amount;
}

public double getAmount() {
	return amount;
}

public void setAmount(double amount) {
	this.amount = amount;
}
}






/* 4
 * Car
 */
 
public class Car {
	
	private String carBrand;
	private String carName;
	private String carColor;
	private double liter;
	private double price;

	public Car(String carBrand, String carName, String carColor, double liter,double price){
		this.carBrand = carBrand;
		this.carName = carName;
		this.carColor = carColor;
		this.liter= liter;
		this.price = price;
	}
	
	public static void main(String[] args) {
	
	}

	public String getCarBrand() {
		return carBrand;
	}

	public void setCarBrand(String carBrand) {
		this.carBrand = carBrand;
	}

	public String getCarName() {
		return carName;
	}

	public void setCarName(String carName) {
		this.carName = carName;
	}

	public String getCarColor() {
		return carColor;
	}

	public void setCarColor(String carColor) {
		this.carColor = carColor;
	}

	public double getLiter() {
		return liter;
	}

	public void setLiter(double liter) {
		this.liter = liter;
	}

	public double getPrice() {
		return price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

}




/* 5
 * Driver
 */
public class Driver {

	private String name;
	private String licenseNumber;
	private int age;
	private boolean gender;

	public Driver(String name, String licenseNumber, int age, boolean gender){
		this.name=name;
		this.licenseNumber=licenseNumber;
		this.age=age;
		this.gender=gender;

	}
	
	public static void main(String[] args) {
		
	      Driver driver1=new Driver("David", "112233", 30, true);
	      driver1.getDriversInformation(driver1);
	      System.out.println("                 ");
	      
	      Car car=new Car("Audi","A6","Black",2.0,40000);
	      System.out.println(driver1.getName()+" owns a car");
	      driver1.getCarsInformation(car);
	      System.out.println("                 ");
	      
	      
	      GasTank gastank=new GasTank();
	      gastank.setAmount(20.0);
	      driver1.driverCheckGas(gastank);
	      System.out.println(driver1.getName()+" is going to take a road trip");
	      System.out.println("                 ");

	      driver1.driverAddGas(gastank, 100);
	      driver1.drive(driver1);
	      System.out.println("                 ");

	      driver1.driverUseGas(gastank, 5.5);

		  driver1.drive(driver1);
    }


	public void getDriversInformation(Driver driver){
		
		System.out.println("This driver's name : "+driver.getName()+". "+" Driver's license number : "+ driver.getLicenseNumber()+". "+
	    		  " Driver's age : "+driver.getAge()+". "+" Driver's gender:"+driver.isGender()+"  true:male, false:female");		
	}
	
	public void getCarsInformation(Car car){
		 System.out.println("The car's brand: "+car.getCarBrand()+". "+"The car's name: "+car.getCarName()+". "
	    		  +"The car's color: "+car.getCarColor()+". "+"The car's liter: "+car.getLiter()+". "
	    		  +"The car's price: $"+car.getPrice()+". ");
	}
	
	
	
	
	public void drive(Driver driver){
		
		System.out.println(driver.getName()+" continued driving.");
		
	}
	
	
	public double driverCheckGas(GasTank gastank){
		System.out.println("The car has "+gastank.getAmount()+" gallon fuel.");
		return gastank.getAmount();
	}
	
	public void driverAddGas(GasTank gastank, double n){
	     gastank.addGas(n);
		 System.out.println("The driver adds "+n+" gallon fuel");
		 System.out.println("The car has "+gastank.getAmount()+" gallon fuel now.");

	}
	
	public void driverUseGas(GasTank gastank, double hour){
		 double gasUsePerHour = 10;
		 double totalUse= hour*gasUsePerHour;
	     gastank.useGas(totalUse);
		 System.out.println("The driver used "+totalUse+" gallon fuel");
		 System.out.println("The car has "+gastank.getAmount()+" gallon fuel now.");

	}
	
	

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getLicenseNumber() {
		return licenseNumber;
	}

	public void setLicenseNumber(String licenseNumber) {
		this.licenseNumber = licenseNumber;
	}

	public int getAge() {
		return age;
	}

	public void setAge(int age) {
		this.age = age;
	}

	public boolean isGender() {
		return gender;
	}

	public void setGender(boolean gender) {
		this.gender = gender;
	}

}





/* Bonus
 * Stack
 */
public class Stack {

	int[] a=new int[10];
	int count=0;
	public void push(int n){
		if(count<10){
			System.out.println("push "+n+" to stack");
			a[count]=n;
			count++;
		}
		else{
			System.out.println("overflow");
		}
		}	
	
	public void getStack(){
		
		 for(int i=0; i<count;i++){
	        	System.out.print(a[i]+" ");
	        }
	        }

	
	public int pop(){
		System.out.println("pop "+a[count-1]);
		if(count>1){
			count--;
        	return a[count-1];
        }
		else{
			System.out.println("underflow");
			return 0;

		}
	}
	
	
	public static void main(String[] args) {

		Stack stack=new Stack();
		stack.push(5);
		stack.getStack();
		System.out.println();
		stack.push(10);
		stack.getStack();
		System.out.println();
		stack.push(15);
		stack.getStack();
		System.out.println();
		stack.push(20);
		stack.getStack();
		System.out.println();
		stack.push(25);
		stack.getStack();
		System.out.println();
		stack.push(30);
		stack.getStack();
		System.out.println();
		stack.push(35);
		stack.getStack();
		System.out.println();
		stack.push(40);
		stack.getStack();
		System.out.println();
		stack.push(45);
		stack.getStack();
		System.out.println();
		stack.push(50);
		stack.getStack();
		System.out.println();
		stack.push(55);
		stack.getStack();
		System.out.println();
		
                stack.pop();
		stack.getStack();
		System.out.println();
		stack.pop();
		stack.getStack();
		System.out.println();
		stack.pop();
		stack.getStack();
		System.out.println();
		stack.pop();
		stack.getStack();
		System.out.println();
		stack.pop();
		stack.getStack();
		System.out.println();
		stack.pop();
		stack.getStack();
		System.out.println();
		stack.pop();
		stack.getStack();
		System.out.println();
		stack.pop();
		stack.getStack();
		System.out.println();
		stack.pop();
		stack.getStack();
		System.out.println();
		stack.pop();
	}

}




